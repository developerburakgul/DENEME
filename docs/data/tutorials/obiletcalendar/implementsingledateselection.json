{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"category":"","title":"Implement Single Date Selection","role":"project","categoryPathComponent":"MeetObiletCalendar"},"hierarchy":{"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","paths":[["doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/$volume","doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection"]],"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Add-a-Base-view","kind":"task"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Explore-a-Base-View-Range"}]},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers","sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Day-Modifier"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Include-Parameter"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Month-Modifier","kind":"task"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Modified-Day-+-Modified-Month","kind":"task"}]},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar#OBBaseCalendar","kind":"task"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Create-Demo-Project"},{"projects":[{"sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"task"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface"},{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Improve-User-Interface"},{"projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Refactor-Code"},{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection"},{"projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day","kind":"task"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Special-Day-View"}]},"sections":[{"title":"Implement Single Date Selection","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement single date selection for users can select specific date."}]}],"estimatedTimeInMinutes":15,"chapter":"Implement Date Selection","kind":"hero"},{"tasks":[{"stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Look at latest state of previous chapter."}],"type":"paragraph"}],"type":"step","media":null,"code":"c3-t1-s1-s1.swift","caption":[],"runtimePreview":"c3-t1-s1-s1.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create helper "},{"type":"codeVoice","code":"contentBuilder"},{"text":" function.","type":"text"}]}],"caption":[{"type":"paragraph","inlineContent":[{"text":"Create helper ","type":"text"},{"type":"codeVoice","code":"modifyDayView"},{"type":"text","text":" function that takes model as parameter."}]}],"code":"c3-t1-s1-s2.swift","runtimePreview":"c3-t1-s1-s2.png","media":null,"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"contentBuilder","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"modifyDayView"}]}],"code":"c3-t1-s1-s3.swift","type":"step","media":null,"caption":[],"runtimePreview":"c3-t1-s1-s3.png"}],"title":"Refactor Code","anchor":"Refactor-Code","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Refactor Code"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}]},{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Add feature that select single date."}],"type":"paragraph"}]}],"title":"Implement Single Date","anchor":"Implement-Single-Date","stepsSection":[{"content":[{"inlineContent":[{"text":"Look at latest state of previous Section.","type":"text"}],"type":"paragraph"}],"caption":[],"code":"c3-t1-s2-s1.swift","runtimePreview":"c3-t1-s2-s1.png","media":null,"type":"step"},{"type":"step","code":"c3-t1-s2-s2.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"selectDate(of:)"},{"text":" function is implemented to handle date selection effectively.","type":"text"}]}],"runtimePreview":"c3-t1-s2-s2.png","content":[{"inlineContent":[{"text":"In this step, the ","type":"text"},{"type":"codeVoice","code":"firstSelectedDate"},{"type":"text","text":" property is added to keep track of the user’s selection."}],"type":"paragraph"}],"media":null},{"runtimePreview":"c3-t1-s2-s3.png","type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Update ","type":"text"},{"code":"ModifyDayView","type":"codeVoice"},{"type":"text","text":" function to show user’s selection and add custom background."}]}],"code":"c3-t1-s2-s3.swift","caption":[]}]}],"kind":"tasks"},{"kind":"callToAction","abstract":[],"title":"Implement Double Date Selection","action":{"type":"reference","isActive":true,"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"featuredEyebrow":"Tutorial"}],"kind":"project","variants":[{"paths":["\/tutorials\/obiletcalendar\/implementsingledateselection"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection"},"references":{"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView#Explore-a-Base-View-Range":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Explore-a-Base-View-Range","abstract":[],"title":"Explore a Base View Range","url":"\/tutorials\/obiletcalendar\/createbaseview#Explore-a-Base-View-Range","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay#Implement-Your-Custom-Special-Day","abstract":[],"role":"pseudoSymbol","title":"Implement Your Custom Special Day","url":"\/tutorials\/obiletcalendar\/implementyourcustomspecialday#Implement-Your-Custom-Special-Day","kind":"section","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/BaseCalendar#OBBaseCalendar":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar#OBBaseCalendar","abstract":[{"text":"You can more manage your calendar using ","type":"text"},{"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar","isActive":true},{"text":".If you previous steps are enough for you, you can skip this section.","type":"text"}],"title":"OBBaseCalendar","url":"\/tutorials\/obiletcalendar\/basecalendar#OBBaseCalendar","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"estimatedTime":"10min","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}],"role":"project","title":"Improve User Interface","url":"\/tutorials\/obiletcalendar\/improveuserinterface","kind":"project","type":"topic"},"c3-t1-s2-s1.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"type":"file","fileName":"OBCalendarDemo.swift","syntax":"swift","highlights":[],"fileType":"swift","identifier":"c3-t1-s2-s1.swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"role":"pseudoSymbol","title":"Add Weekdays View","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View","kind":"section","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","abstract":[{"type":"text","text":"Setup Empty Project"}],"title":"Setup Empty Project","estimatedTime":"3min","url":"\/tutorials\/obiletcalendar\/setupemptyproject","type":"topic","kind":"project","role":"project"},"c3-t1-s2-s3.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    var selectedOBBackgroundColor: some View = Circle()","        .foregroundColor(","            Self.makeColor(","                red: 47,","                green: 91,","                blue: 141","            )","        )","    ","    @State var firstSelectedDate: Date?","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","                .onTapGesture {","                    selectDate(of: model.day)","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if (dayDate < today) {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    if firstSelectedDate == model.date {","                        modifiedContent","                            .foregroundColor(.white)","                            .background(selectedOBBackgroundColor)","                    }else {","                        modifiedContent","                            .foregroundColor(.black)","                    }","                }","            }else {","                Color.clear","            }","        }","    }","    ","    func selectDate(of day: CalendarModel.Day) {","        let startOfToday = calendar.startOfDay(for: Date())","        let startOfDay = calendar.startOfDay(for: day.date)","        ","        if day.isInRangeCurrentMonth {","            if startOfDay >= startOfToday {","                firstSelectedDate = day.date","            }","        }","        ","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"type":"file","fileName":"OBCalendarDemo.swift","syntax":"swift","highlights":[{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":102},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112},{"line":113},{"line":115},{"line":116}],"fileType":"swift","identifier":"c3-t1-s2-s3.swift"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Modified-Day-+-Modified-Month":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Modified-Day-+-Modified-Month","abstract":[],"title":"Modified Day + Modified Month","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Modified-Day-+-Modified-Month","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView#Add-a-Base-view":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView#Add-a-Base-view","abstract":[],"title":"Add a Base view","url":"\/tutorials\/obiletcalendar\/createbaseview#Add-a-Base-view","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","abstract":[],"title":"Implement Double Date Selection","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","abstract":[],"title":"Implement Double Date Selection","estimatedTime":"10min","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","type":"topic","kind":"project","role":"project"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar","abstract":[{"type":"text","text":"Create easily your custom calendar"}],"title":"Meet ObiletCalendar","url":"\/tutorials\/meetobiletcalendar","type":"topic","kind":"overview","role":"overview"},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","abstract":[{"text":"Setup Empty Project","type":"text"}],"role":"pseudoSymbol","title":"Create a new project and add ObiletCalendar","url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar","kind":"section","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}],"title":"Implement Single Date Selection","estimatedTime":"15min","url":"\/tutorials\/obiletcalendar\/implementsingledateselection","type":"topic","kind":"project","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Refactor-Code":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Refactor-Code","abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}],"title":"Refactor Code","url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Refactor-Code","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/BaseCalendar":{"estimatedTime":"10min","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/BaseCalendar","abstract":[{"text":"You can more manage your calendar using ","type":"text"},{"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar","isActive":true,"type":"reference"},{"type":"text","text":".If you previous steps are enough for you, you can skip this section."}],"role":"project","title":"Understand BaseCalendar","url":"\/tutorials\/obiletcalendar\/basecalendar","kind":"project","type":"topic"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Implement-Date-Selection":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Date-Selection","abstract":[],"title":"Implement Date Selection","url":"\/tutorials\/meetobiletcalendar\/implement-date-selection","type":"topic","kind":"article","role":"article"},"doc://ObiletCalendar/documentation/ObiletCalendar/OBBaseCalendar":{"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBBaseCalendar","abstract":[],"url":"\/documentation\/obiletcalendar\/obbasecalendar","navigatorTitle":[{"text":"OBBaseCalendar","kind":"identifier"}],"kind":"symbol","title":"OBBaseCalendar","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OBBaseCalendar"}]},"c3-t1-s1-s2.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                let day = model.day","                let today = calendar.startOfDay(for: Date())","                let dayDate = calendar.startOfDay(for: day.date)","                ","                if day.isInRangeCurrentMonth {","                    if dayDate < today {","                        baseView","                            .foregroundColor(.gray)","                    }else {","                        baseView","                    }","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            \/\/ some logic goes here","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"type":"file","fileName":"OBCalendarDemo.swift","syntax":"swift","highlights":[{"line":29},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93}],"fileType":"swift","identifier":"c3-t1-s1-s2.swift"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Create-Demo-Project":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Create-Demo-Project","abstract":[],"title":"Create Demo Project","url":"\/tutorials\/meetobiletcalendar\/create-demo-project","type":"topic","kind":"article","role":"article"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Month-Modifier":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Month-Modifier","abstract":[],"role":"pseudoSymbol","title":"Month Modifier","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Month-Modifier","kind":"section","type":"section"},"c3-t1-s2-s1.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s2-s1.png"}],"alt":null,"identifier":"c3-t1-s2-s1.png"},"c3-t1-s1-s3.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s1-s3.png"}],"identifier":"c3-t1-s1-s3.png","type":"image"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date."}],"title":"Implement Single Date","url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Improve-User-Interface":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Improve-User-Interface","abstract":[],"title":"Improve User Interface","url":"\/tutorials\/meetobiletcalendar\/improve-user-interface","type":"topic","kind":"article","role":"article"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Hide-Some-Days":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","abstract":[],"title":"Hide Some Days","url":"\/tutorials\/obiletcalendar\/changedayview#Hide-Some-Days","type":"section","kind":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Include-Parameter":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Include-Parameter","abstract":[],"role":"pseudoSymbol","title":"Include Parameter","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Include-Parameter","kind":"section","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateBaseView":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateBaseView","abstract":[],"title":"Base View","estimatedTime":"5min","url":"\/tutorials\/obiletcalendar\/createbaseview","type":"topic","kind":"project","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"estimatedTime":"1min","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","abstract":[],"role":"project","title":"Change Day View","url":"\/tutorials\/obiletcalendar\/changedayview","kind":"project","type":"topic"},"doc://ObiletCalendar/tutorials/MeetObiletCalendar/Implement-Special-Day-View":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/MeetObiletCalendar\/Implement-Special-Day-View","abstract":[],"title":"Implement Special Day View","url":"\/tutorials\/meetobiletcalendar\/implement-special-day-view","type":"topic","kind":"article","role":"article"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers","abstract":[],"title":"Understand Modifiers","estimatedTime":"2min","url":"\/tutorials\/obiletcalendar\/understandmodifiers","type":"topic","kind":"project","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/UnderstandModifiers#Day-Modifier":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/UnderstandModifiers#Day-Modifier","abstract":[],"title":"Day Modifier","url":"\/tutorials\/obiletcalendar\/understandmodifiers#Day-Modifier","type":"section","kind":"section","role":"pseudoSymbol"},"c3-t1-s1-s1.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                let day = model.day","                let today = calendar.startOfDay(for: Date())","                let dayDate = calendar.startOfDay(for: day.date)","                ","                if day.isInRangeCurrentMonth {","                    if dayDate < today {","                        baseView","                            .foregroundColor(.gray)","                    }else {","                        baseView","                    }","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"type":"file","fileName":"OBCalendarDemo.swift","syntax":"swift","highlights":[],"fileType":"swift","identifier":"c3-t1-s1-s1.swift"},"c3-t1-s1-s2.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/c3-t1-s1-s2.png"}],"identifier":"c3-t1-s1-s2.png","type":"image"},"c3-t1-s1-s3.swift":{"syntax":"swift","identifier":"c3-t1-s1-s3.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""],"fileType":"swift","highlights":[{"line":41},{"line":42},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94}],"fileName":"OBCalendarDemo.swift","type":"file"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementYourCustomSpecialDay":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementYourCustomSpecialDay","abstract":[],"title":"Implement Special Day","estimatedTime":"7min","url":"\/tutorials\/obiletcalendar\/implementyourcustomspecialday","type":"topic","kind":"project","role":"project"},"c3-t1-s2-s3.png":{"variants":[{"url":"\/images\/c3-t1-s2-s3.png","traits":["1x","light"]}],"alt":null,"identifier":"c3-t1-s2-s3.png","type":"image"},"c3-t1-s2-s2.png":{"type":"image","identifier":"c3-t1-s2-s2.png","variants":[{"url":"\/images\/c3-t1-s2-s2.png","traits":["1x","light"]}],"alt":null},"c3-t1-s1-s1.png":{"variants":[{"url":"\/images\/c3-t1-s1-s1.png","traits":["1x","light"]}],"alt":null,"identifier":"c3-t1-s1-s1.png","type":"image"},"c3-t1-s2-s2.swift":{"highlights":[{"line":17},{"line":18},{"line":46},{"line":47},{"line":48},{"line":102},{"line":103},{"line":104},{"line":105},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112},{"line":113}],"identifier":"c3-t1-s2-s2.swift","fileName":"OBCalendarDemo.swift","syntax":"swift","type":"file","fileType":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak Gül on 18.11.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var calendar: Calendar = Calendar.current","    ","    var OBRed = Self.makeColor(red: 210, green: 59, blue: 56)","    var OBGray = Self.makeColor(red: 239, green: 239, blue: 239)","    ","    @State var firstSelectedDate: Date?","    ","    init(_ calendar: Calendar) {","        self.calendar = calendar","    }","    ","    var body: some View {","        VStack(spacing:0) {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding()","                .background(OBRed)","                .foregroundColor(.white)","            ","            weekdaysView","                .padding(.vertical,8)","                .padding(.horizontal,16)","                .background(OBGray)","            calendarView","        }","    }","    ","    var calendarView: some View {","        OBCalendar(calendar:calendar)","            .dayModifier { baseView, model in","                modifyDayView(model: model.day) {","                    baseView","                }","                .onTapGesture {","                    selectDate(of: model.day)","                }","            }","    }","    ","    var weekdaysView: some View {","        let weekdays = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(weekdays.indices, id: \\.self) { index in","                Text(weekdays[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var headerView: some View {","        HStack {","            Text(\"Departure\")","            Spacer()","            Image(systemName: \"xmark\")","        }","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        return reorderedShortWeekdays","    }","    ","    private func contentBuilder<Content: View>(@ViewBuilder content: () -> Content) -> Content {","        content()","    }","    ","    func modifyDayView<Content:View>(model: CalendarModel.Day, @ViewBuilder content: () -> Content ) -> some View {","        contentBuilder {","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: model.date)","            let modifiedContent = content()","            ","            if model.isInRangeCurrentMonth {","                if dayDate < today {","                    modifiedContent","                        .foregroundColor(.gray)","                }else {","                    modifiedContent","                }","            }","        }","    }","    ","    func selectDate(of day: CalendarModel.Day) {","        let startOfToday = calendar.startOfDay(for: Date())","        let startOfDay = calendar.startOfDay(for: day.date)","        ","        if day.isInRangeCurrentMonth {","            if startOfDay >= startOfToday {","                firstSelectedDate = day.date","            }","        }","        ","    }","}","","private extension OBCalendarDemo {","    static func makeColor(red: Int, green: Int, blue: Int) -> Color {","        Color(","            red: Double(red) \/ 255,","            green: Double(green) \/ 255,","            blue: Double(blue) \/ 255","        )","    }","}","","#Preview {","    let calendar = Calendar.current","    return OBCalendarDemo(calendar)","}",""]}}}